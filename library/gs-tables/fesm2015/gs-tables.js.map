{"version":3,"file":"gs-tables.js","sources":["ng://gs-tables/lib/gs-tables.service.ts","ng://gs-tables/lib/gs-tables.widgets.ts","ng://gs-tables/lib/gs-tables.component.ts","ng://gs-tables/lib/gs-table-elements/row-actions/row-actions.component.ts","ng://gs-tables/lib/gs-tables.module.ts","ng://gs-tables/public-api.ts","ng://gs-tables/gs-tables.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GsTablesService {\n\n  constructor() { }\n\n  public objectKeysToArray(rawArray: Array<object>): Array<string> {\n    const contentKeys = [];\n\n    for (const keys in rawArray[0]) {\n      if (Object.prototype.hasOwnProperty.call(rawArray[0], keys) && rawArray[0][keys]) {\n        contentKeys.push(keys);\n      }\n    }\n\n    return contentKeys;\n  }\n}\n","/**\r\n * A row action element\r\n * For example: 'edit', 'delete', etc...\r\n */\r\nexport interface GTableAction {\r\n  display: boolean;\r\n  text: string;\r\n  id?: string;\r\n  row?: {};\r\n}\r\n\r\n/**\r\n * An event triggered when clicking an action element\r\n */\r\nexport interface GTableRowAction {\r\n  display: boolean;\r\n  text: string;\r\n  actions: Array<GTableAction>;\r\n}\r\n\r\n/**\r\n * Input/button styles\r\n */\r\ninterface GInputStyle {\r\n  /* Input padding */\r\n  padding?: string;\r\n  /* Input text color */\r\n  color?: string;\r\n  /* Input backgroud */\r\n  background?: string;\r\n  /* Input border size */\r\n  borderSize?: string;\r\n  /* Input border style */\r\n  borderStyle?: string;\r\n  /* Input border color */\r\n  borderColor?: string;\r\n  /* Input radious */\r\n  borderRadius?: string;\r\n  /* Input border top width/size */\r\n  borderTop?: string;\r\n  /* Input border right width/size */\r\n  borderRight?: string;\r\n  /* Input border bottom width/size */\r\n  borderBottom?: string;\r\n  /* Input border left width/size */\r\n  borderLeft?: string;\r\n}\r\n\r\n/**\r\n * Library styles\r\n *\r\n * @description\r\n * Send style parameters to the library\r\n *\r\n */\r\nexport interface GStyles {\r\n  color?: {\r\n    /**\r\n     * Font color\r\n     * default: \"inherit\"\r\n     */\r\n    font?: string;\r\n\r\n    /**\r\n     * Primary color, used in important UI elements background and color\r\n     * default: \"#4588fd\"\r\n     */\r\n    primary?: string;\r\n\r\n    /**\r\n     * Secondary color, used in some UI elements background and color\r\n     * default: \"#7a9e9f\"\r\n     */\r\n    secondary?: string;\r\n\r\n    /**\r\n     * Neutral color, used in some UI elements background and color\r\n     * default: \"#4f6367\"\r\n     */\r\n    neutral?: string;\r\n\r\n    /**\r\n     * Border color\r\n     * default: \"#eeeeee\"\r\n     */\r\n    border?: string;\r\n\r\n    /**\r\n     * White color, all white colors used in UI elements\r\n     * default: \"#ffffff\"\r\n     */\r\n    white?: string;\r\n  };\r\n  ui?: {\r\n    /**\r\n     * Font size, all fonts size\r\n     * default: \".9rem\"\r\n     */\r\n    fontSize?: string;\r\n    /**\r\n     * Inner padding\r\n     */\r\n    padding?: string;\r\n    /**\r\n     * Input and button style\r\n     * Go to `GInputStyle` for detail\r\n     */\r\n    primaryButton?: GInputStyle;\r\n  };\r\n}\r\n\r\n/**\r\n * Table design\r\n */\r\nexport enum GTableStyle {\r\n  /**\r\n   * Display the table with all its columns, a header. Actions are optional.\r\n   */\r\n  TABLE = 'TABLE',\r\n  /**\r\n   * Disply only the first and second column, no header. Actions are optional.\r\n   */\r\n  SINGLE = 'SINGLE'\r\n}\r\n\r\n/**\r\n * Table configuration\r\n */\r\nexport interface GTable {\r\n  /**\r\n   * The table data as an array of objects\r\n   */\r\n  data: Array<object>;\r\n  /**\r\n   * Table header values\r\n   *\r\n   * Optional. If not defined the header will use `GTable.data` key names\r\n   */\r\n  header?: Array<string>;\r\n  /**\r\n   * Key names of the data values\r\n   *\r\n   * Optional. If not defined the table will iterate over the keys of its data.\r\n   */\r\n  keyNames?: Array<string>;\r\n  /**\r\n   * Change the table design or add funcionalities\r\n   */\r\n  options?: {\r\n    /**\r\n     * Set the table desgin\r\n     *\r\n     * By Default: `GTableStyle.TABLE`\r\n     */\r\n    style?: GTableStyle;\r\n    /**\r\n     * A dropdown button with actions to trigger events\r\n     */\r\n    rowActions?: GTableRowAction;\r\n    /**\r\n     * The page currently being displayed\r\n     */\r\n    currentPage?: number;\r\n    /**\r\n     * The total of available pages\r\n     */\r\n    totalOfPages?: number;\r\n  };\r\n}\r\n","import {\n  Component,\n  Input,\n  HostBinding,\n  HostListener,\n  ViewChild,\n  ElementRef,\n  Inject,\n  Output,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport { GTable, GTableRowAction, GTableAction, GTableStyle, GStyles } from './gs-tables.widgets';\nimport { GsTablesService } from './gs-tables.service';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n// https://uxdesign.cc/design-better-data-tables-4ecc99d23356\n\n@Component({\n  selector: 'gs-table',\n  templateUrl: './gs-tables.component.html',\n  styleUrls: ['./gs-tables.component.sass']\n})\nexport class GsTablesComponent implements OnChanges {\n  @Input() private tableData: GTable;\n  @Input() public currentPage: number;\n  @Input() public totalOfPages: number;\n  @Output() private rowActionEvent = new EventEmitter<GTableAction>();\n  @Output() private navigateNext = new EventEmitter<void>();\n  @Output() private navigatePrevious = new EventEmitter<void>();\n  @ViewChild('tableContentElement', { static: false }) private tableContentElement: ElementRef;\n  @ViewChild('tableHeaderElement', { static: false }) private tableHeaderElement: ElementRef;\n\n  public tableHeader: Array<string>;\n  public tableContentKeys: Array<string>;\n  public tableContent: Array<object>;\n  public tableContentPadding: number;\n  public tableRowActions: GTableRowAction;\n  public tableStyle: GTableStyle;\n  private customStyles: GStyles;\n\n  public noTableData: boolean;\n  public tableStyleType = GTableStyle;\n\n  public canNavigateNext: boolean;\n  public canNavigatePrevious: boolean;\n\n  constructor(\n    private sanitizer: DomSanitizer,\n    private tableService: GsTablesService,\n    @Inject('customStyles') customStyles\n  ) {\n    this.customStyles = customStyles;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!changes) {\n      return;\n    }\n\n    if (changes.tableData && changes.tableData.currentValue) {\n      this.tableData = changes.tableData.currentValue;\n\n      if (this.tableData.data) {\n        this.noTableData = false;\n        this.tableDataAdapter();\n      } else {\n        this.noTableData = true;\n        this.onInputDataError();\n      }\n    }\n\n    if (changes.currentPage || this.currentPage) {\n      this.currentPage = changes.currentPage ? changes.currentPage.currentValue : this.currentPage;\n    } else {\n      this.currentPage = null;\n    }\n\n    if (changes.totalOfPages || this.totalOfPages) {\n      this.totalOfPages = changes.totalOfPages ? changes.totalOfPages.currentValue : this.totalOfPages;\n    } else {\n      this.totalOfPages = null;\n    }\n\n    if (this.currentPage && this.totalOfPages) {\n      this.setTableFooter();\n    } else if (this.currentPage || this.totalOfPages) {\n      return console.warn(\n        'GS Table building warning:' + '\\n\\n' +\n        'If you wish to display current and total of pages please add to your table options `currentPage` and `totalOfPages`'\n      );\n    }\n\n    setTimeout(() => {\n      this.setContentWidth();\n    });\n  }\n\n  private setTableFooter() {\n    if (this.currentPage <= 1) {\n      this.canNavigatePrevious = false;\n    } else {\n      this.canNavigatePrevious = true;\n    }\n\n    if (this.currentPage + 1 > this.totalOfPages) {\n      this.canNavigateNext = false;\n    } else {\n      this.canNavigateNext = true;\n    }\n  }\n\n  private tableDataAdapter() {\n    this.tableStyle = this.tableData.options.style || GTableStyle.TABLE;\n    this.tableContent = this.tableData.data;\n    this.tableRowActions = this.tableData.options.rowActions || null;\n    this.tableContentKeys = this.tableData.keyNames ? this.tableData.keyNames : this.tableService.objectKeysToArray(this.tableContent);\n\n    if (this.tableStyle === GTableStyle.SINGLE) {\n      this.tableContentKeys = [this.tableContentKeys[0], this.tableContentKeys[1]];\n    } else {\n      this.tableHeader = this.tableData.header || this.tableContentKeys;\n    }\n\n  }\n\n  @HostBinding('attr.style')\n  public get valueAsStyle(): any {\n    let variables = '';\n\n    // Layout\n    if (!this.noTableData && this.tableStyle === GTableStyle.TABLE && this.tableHeader.length) {\n      if (this.tableRowActions && this.tableRowActions.display) {\n        variables = variables + `--gs-repeat: repeat(${this.tableHeader.length + 1}, 1fr)!important;`;\n      } else {\n        variables = variables + `--gs-repeat: repeat(${this.tableHeader.length}, 1fr)!important;`;\n      }\n    }\n\n    // UI\n    if (this.customStyles) {\n      if (this.customStyles.color) {\n        variables = variables + `--gs-font-color: ${this.customStyles.color}!important;`;\n      }\n      if (this.customStyles.ui.fontSize) {\n        variables = variables + `--gs-font-size: ${this.customStyles.ui.fontSize}!important;`;\n      }\n      if (this.customStyles.color.primary) {\n        variables = variables + `--gs-primary-color: ${this.customStyles.color.primary}!important;`;\n      }\n      if (this.customStyles.color.secondary) {\n        variables = variables + `--gs-secondary-color: ${this.customStyles.color.secondary}!important;`;\n      }\n      if (this.customStyles.color.neutral) {\n        variables = variables + `--gs-neutral-color: ${this.customStyles.color.neutral}!important;`;\n      }\n      if (this.customStyles.color.border) {\n        variables = variables + `--gs-border-color: ${this.customStyles.color.border}!important;`;\n      }\n      if (this.customStyles.color.white) {\n        variables = variables + `--gs-white-color: ${this.customStyles.color.white}!important;`;\n      }\n      if (this.customStyles.ui.padding) {\n        variables = variables + `--gs-padding: ${this.customStyles.ui.padding}!important;`;\n      }\n      if (this.customStyles.ui.primaryButton) {\n        if (this.customStyles.ui.primaryButton.padding) {\n          variables = variables + `--gs-button-padding: ${this.customStyles.ui.primaryButton.padding}!important;`;\n        }\n        if (this.customStyles.ui.primaryButton.color) {\n          variables = variables + `--gs-button-color: ${this.customStyles.ui.primaryButton.color}!important;`;\n        }\n        if (this.customStyles.ui.primaryButton.background) {\n          variables = variables + `--gs-button-background: ${this.customStyles.ui.primaryButton.background}!important;`;\n        }\n        if (this.customStyles.ui.primaryButton.borderSize) {\n          variables = variables + `--gs-button-border-size: ${this.customStyles.ui.primaryButton.borderSize}!important;`;\n        }\n        if (this.customStyles.ui.primaryButton.borderStyle) {\n          variables = variables + `--gs-button-border-style: ${this.customStyles.ui.primaryButton.borderStyle}!important;`;\n        }\n        if (this.customStyles.ui.primaryButton.borderColor) {\n          variables = variables + `--gs-button-border-color: ${this.customStyles.ui.primaryButton.borderColor}!important;`;\n        }\n        if (this.customStyles.ui.primaryButton.borderRadius) {\n          variables = variables + `--gs-button-border-radius: ${this.customStyles.ui.primaryButton.borderRadius}!important;`;\n        }\n        if (this.customStyles.ui.primaryButton.borderTop) {\n          variables = variables + `--gs-button-border-top: ${this.customStyles.ui.primaryButton.borderTop}!important;`;\n        }\n        if (this.customStyles.ui.primaryButton.borderRight) {\n          variables = variables + `--gs-button-border-right: ${this.customStyles.ui.primaryButton.borderRight}!important;`;\n        }\n        if (this.customStyles.ui.primaryButton.borderBottom) {\n          variables = variables + `--gs-button-border-bottom: ${this.customStyles.ui.primaryButton.borderBottom}!important;`;\n        }\n        if (this.customStyles.ui.primaryButton.borderLeft) {\n          variables = variables + `--gs-button-border-left: ${this.customStyles.ui.primaryButton.borderLeft}!important;`;\n        }\n      }\n    }\n\n    return this.sanitizer.bypassSecurityTrustStyle(\n      variables\n    );\n  }\n\n  @HostListener('window:resize', ['$event'])\n  public onResize(event) {\n    this.setContentWidth();\n  }\n\n  private setContentWidth() {\n    if (!this.noTableData && this.tableStyle === GTableStyle.TABLE) {\n      this.tableContentPadding =\n        this.tableHeaderElement.nativeElement.offsetWidth - this.tableContentElement.nativeElement.offsetWidth;\n    }\n  }\n\n  public hdlRowAction(action: GTableAction): void {\n    this.rowActionEvent.emit(action);\n  }\n\n  public onNavigate(next: boolean): void {\n    if (next) {\n      this.navigateNext.emit();\n    } else {\n      this.navigatePrevious.emit();\n    }\n  }\n\n  private onInputDataError(): void {\n    return console.error(\n      'GS Table building err: Please provide tableData:' + '\\n\\n' +\n      '1. In your template make sure you have:' + '\\n\\n' +\n      '\\xa0' + '<gs-table [tableData]=\"tableData\"></gs-table>' + '\\n\\n' +\n      '2. In your component declare `tableData`:' + '\\n\\n' +\n      '\\xa0public tableData = {' + '\\n' +\n      '\\xa0\\xa0\\xa0' + 'data: Array<object>;' + '\\n' +\n      '\\xa0\\xa0\\xa0' + 'header?: Array<string>;' + '\\n' +\n      '\\xa0\\xa0\\xa0' + 'options?: {' + '\\n' +\n      '\\xa0\\xa0\\xa0\\xa0\\xa0' + 'style?: GTableStyle;' + '\\n' +\n      '\\xa0\\xa0\\xa0\\xa0\\xa0' + 'rowActions?: GTableRowAction;' + '\\n' +\n      '\\xa0\\xa0\\xa0' + '}' + '\\n' +\n      '\\xa0}'\n    );\n  }\n}\n","import { Component, ViewChild, ElementRef, Input, Output, EventEmitter, HostListener } from '@angular/core';\r\nimport { GTableRowAction, GTableAction } from '../../gs-tables.widgets';\r\n\r\n@Component({\r\n  selector: 'gs-table-row-actions',\r\n  templateUrl: './row-actions.component.html',\r\n  styleUrls: ['./row-actions.component.sass']\r\n})\r\nexport class GsTableRowActionsComponent {\r\n  public showActions: boolean;\r\n\r\n  @ViewChild('optionsContainer', { static: false }) public optionsContainer: ElementRef;\r\n  @ViewChild('optionsButton', { static: true }) public optionsButton: ElementRef;\r\n\r\n  @Input() public rowAction: GTableRowAction;\r\n  @Input() public rowData: {};\r\n  @Output() private rowActionEvent = new EventEmitter<GTableAction>();\r\n\r\n  @HostListener('document:click', ['$event'])\r\n  clickout(event) {\r\n    if (this.optionsButton.nativeElement.contains(event.target)) {\r\n      this.onToggleShowActions();\r\n    } else if (this.showActions && !this.optionsContainer.nativeElement.contains(event.target)) {\r\n      this.showActions = false;\r\n    }\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  public hdlAction(action: GTableAction) {\r\n    this.showActions = false;\r\n    action.row = this.rowData;\r\n    this.rowActionEvent.emit(action);\r\n  }\r\n\r\n  public onToggleShowActions() {\r\n    this.showActions = !this.showActions;\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { GsTablesComponent } from './gs-tables.component';\nimport { GsTableRowActionsComponent } from './gs-table-elements/row-actions/row-actions.component';\nimport { GStyles } from './gs-tables.widgets';\n\n@NgModule({\n  declarations: [\n    GsTablesComponent,\n    GsTableRowActionsComponent\n  ],\n  imports: [\n    CommonModule,\n    TranslateModule,\n    HttpClientModule\n  ],\n  exports: [GsTablesComponent]\n})\nexport class GsTablesModule {\n  public static forRoot(styles?: GStyles): ModuleWithProviders {\n    return {\n      ngModule: GsTablesModule,\n      providers: [\n        {\n          provide: 'customStyles',\n          useValue: styles\n        }\n      ]\n    };\n  }\n}\n","/*\n * Public API Surface of gs-tables\n */\n\nexport * from './lib/gs-tables.service';\nexport * from './lib/gs-tables.component';\nexport * from './lib/gs-tables.module';\nexport * from './lib/gs-tables.widgets';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {GsTableRowActionsComponent as Éµa} from './lib/gs-table-elements/row-actions/row-actions.component';"],"names":["tslib_1.__decorate","tslib_1.__param"],"mappings":"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"}