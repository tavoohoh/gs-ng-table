{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@rappipay/gs-tables/lib/gs-tables.widgets.ts","ng://@rappipay/gs-tables/lib/gs-tables.enum.ts","ng://@rappipay/gs-tables/lib/gs-tables.constants.ts","ng://@rappipay/gs-tables/lib/gs-tables.service.ts","ng://@rappipay/gs-tables/lib/gs-tables.component.ts","ng://@rappipay/gs-tables/lib/gs-table-elements/row-actions/row-actions.component.ts","ng://@rappipay/gs-tables/lib/gs-table-elements/additional-data/additional-data.component.ts","ng://@rappipay/gs-tables/lib/gs-table-elements/checkbox/checkbox.component.ts","ng://@rappipay/gs-tables/lib/gs-tables.module.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","GTableStyle","GCountryCode","GTypeRowEnum","LOCATION","ar","tax","name","value","country","alpha2Code","phoneFormat","code","mask","currencyFormat","symbol","thousands","decimal","precision","bo","br","ca","disabled","cl","co","cr","ec","mx","pe","us","uy","ve","TEXT_TABLE","es","NO_CONTENT","en","pr","GsTablesService","translateService","this","prototype","objectKeysToArray","rawArray","contentKeys","keys","hasOwnProperty","call","push","getTranslate","param","lang","currentLang","console","warn","message","replace","TranslateService","Injectable","providedIn","GsTablesComponent","sanitizer","tableService","customStyles","rowActionClick","EventEmitter","navigateNext","navigatePrevious","navigateTo","rowValueChanged","tableDataChanged","tableActionClick","tableStyleType","paramIndex","decorator","ngOnChanges","changes","_this","tableData","currentValue","data","noTableData","tableDataAdapter","onInputDataError","options","hasAdditionalData","additionalData","selectable","tableActions","customFooterActions","currentPage","totalOfPages","setTableFooter","setTimeout","setContentWidth","canNavigatePrevious","canNavigateNext","tableStyle","style","TABLE","tablesKeyType","keyTypes","formatData","tableContent","noContentText","tableRowActions","rowActions","tableContentKeys","keyNames","SINGLE","tableHeader","header","forEach","type","CURRENCY","formatCurrency","toString","PHONE","valueTable","location","prefix","suffix","thousandsSeparator","decimalSeparator","inputVal","substring","emptyDecimals","index","cleanValue","decimals","slice","Number","variables","extraColumns","hidden","color","ui","fontSize","primary","secondary","neutral","border","white","padding","primaryButton","background","borderSize","borderStyle","borderColor","borderRadius","borderTop","borderRight","borderBottom","borderLeft","bypassSecurityTrustStyle","onResize","event","tableContentPadding","tableHeaderElement","nativeElement","offsetWidth","tableContentElement","hdlRowAction","action","emit","selectedAdditionalData","onNavigate","next","onNavigateTo","page","error","toggleAdditionalData","$event","id","onRowValueChanged","newRowValue","toggleSelectableSelection","selectableAllSelected","onFooterActionClicked","DomSanitizer","Inject","args","tslib_1.__decorate","Input","Output","ViewChild","static","HostBinding","HostListener","Component","selector","template","tslib_1.__param","GsTableRowActionsComponent","menuHasActions","rowActionEvent","clickout","optionsButton","contains","onToggleActionsMenu","openMenu","optionsContainer","rowAction","actions","displayActionIf","hdlAction","row","rowData","displayIf","model","hasValue","GsAdditionalDataComponent","GsCheckboxComponent","valueChanged","rowIndex","onValueChanged","GsTablesModule","forRoot","styles","ngModule","GsTablesModule_1","providers","provide","useValue","NgModule","declarations","imports","CommonModule","TranslateModule","HttpClientModule","FormsModule","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { GCountryCode } from './gs-tables.enum';\nimport { GKeyType, GCustomTemplate, GAdditionalData, GTableDataValue, GTableFooterAction } from './gs-tables.models';\n\n/**\n * A row action element\n * For example: 'edit', 'delete', etc...\n */\nexport interface GTableAction {\n  text: string;\n  hidden?: boolean;\n  displayIf?: {\n    model: string;\n    hasValue: any;\n  };\n  id?: string;\n  row?: {};\n}\n\n/**\n * An event triggered when clicking an action element\n */\nexport interface GTableRowAction {\n  text: string;\n  actions: Array<GTableAction>;\n  hidden?: boolean;\n  displayIf?: {\n    model: string;\n    hasValue: any;\n  };\n}\n\n/**\n * Input/button styles\n */\ninterface GInputStyle {\n  /* Input padding */\n  padding?: string;\n  /* Input text color */\n  color?: string;\n  /* Input backgroud */\n  background?: string;\n  /* Input border size */\n  borderSize?: string;\n  /* Input border style */\n  borderStyle?: string;\n  /* Input border color */\n  borderColor?: string;\n  /* Input radious */\n  borderRadius?: string;\n  /* Input border top width/size */\n  borderTop?: string;\n  /* Input border right width/size */\n  borderRight?: string;\n  /* Input border bottom width/size */\n  borderBottom?: string;\n  /* Input border left width/size */\n  borderLeft?: string;\n}\n\n/**\n * Library styles\n *\n * @description\n * Send style parameters to the library\n *\n */\nexport interface GStyles {\n  color?: {\n    /**\n     * Font color\n     * default: \"inherit\"\n     */\n    font?: string;\n\n    /**\n     * Primary color, used in important UI elements background and color\n     * default: \"#4588fd\"\n     */\n    primary?: string;\n\n    /**\n     * Secondary color, used in some UI elements background and color\n     * default: \"#7a9e9f\"\n     */\n    secondary?: string;\n\n    /**\n     * Neutral color, used in some UI elements background and color\n     * default: \"#4f6367\"\n     */\n    neutral?: string;\n\n    /**\n     * Border color\n     * default: \"#eeeeee\"\n     */\n    border?: string;\n\n    /**\n     * White color, all white colors used in UI elements\n     * default: \"#ffffff\"\n     */\n    white?: string;\n  };\n  ui?: {\n    /**\n     * Font size, all fonts size\n     * default: \".9rem\"\n     */\n    fontSize?: string;\n    /**\n     * Inner padding\n     */\n    padding?: string;\n    /**\n     * Input and button style\n     * Go to `GInputStyle` for detail\n     */\n    primaryButton?: GInputStyle;\n  };\n}\n\n/**\n * Table design\n */\nexport enum GTableStyle {\n  /**\n   * Display the table with all its columns, a header. Actions are optional.\n   */\n  TABLE = 'TABLE',\n  /**\n   * Disply only the first and second column, no header. Actions are optional.\n   */\n  SINGLE = 'SINGLE'\n}\n\n/**\n * Table configuration\n */\nexport interface GTable {\n  /**\n   * The table data as an array of objects\n   */\n  data?: Array<GTableDataValue>;\n  /**\n   * Table header values\n   *\n   * Optional. If not defined the header will use `GTable.data` key names\n   */\n  header?: Array<string>;\n  /**\n   * Key names of the data values\n   *\n   * Optional. If not defined the table will iterate over the keys of its data.\n   */\n  keyNames?: Array<string>;\n  /**\n   * Key type of the data values\n   */\n  keyTypes?: Array<GKeyType>;\n  /**\n   * Change the table design or add functionalities\n   */\n  options?: {\n    /**\n     * Set default country using `GFieldCountryCode` enum form gs-field\n     */\n    country?: GCountryCode;\n    /**\n     * Set the table design\n     *\n     * By Default: `GTableStyle.TABLE`\n     */\n    style?: GTableStyle;\n    /**\n     * A dropdown button with actions to trigger events\n     */\n    rowActions?: GTableRowAction;\n    /**\n     * The page currently being displayed\n     */\n    currentPage?: number;\n    /**\n     * The total of available pages\n     */\n    totalOfPages?: number;\n    /**\n     * set text when table has no data, for default it's spanish\n     */\n    noContentText?: string;\n    /**\n     * If true will be possible to select rows using checkboxes\n     */\n    selectable?: boolean;\n    /**\n     * A list of custom actions\n     */\n    tableActions?: Array<GTableFooterAction>;\n    /**\n     * Adds an expandable container for additional data\n     * Make sure to include an object with the additional data into your data array, it may look as follow\n     *\n     * data: [\n     *   {...}\n     *   {\n     *     [...]\n     *     [\n     *       ...\n     *        additionalData: [\n     *          {\n     *            label: string,\n     *            value: string\n     *          }\n     *        ]\n     *       ...\n     *     ]\n     *     [...]\n     *   }\n     *   {...}\n     * ]\n     */\n    hasAdditionalData?: boolean;\n  };\n}\n","export enum GCountryCode {\n  AR = 'ar',\n  BO = 'bo',\n  BR = 'br',\n  CA = 'ca',\n  CL = 'cl',\n  CO = 'co',\n  CR = 'cr',\n  EC = 'ec',\n  MX = 'mx',\n  PE = 'pe',\n  US = 'us',\n  UY = 'uy',\n  VE = 've'\n}\n\nexport enum GTypeRowEnum {\n  PHONE = 'phone',\n  CURRENCY = 'currency'\n}\n","import { GLocation } from './gs-tables.models';\n\nexport const LOCATION: { [key: string]: GLocation } = {\n  ar: {\n    tax: [\n      {\n        name: 'CUIT (Código Único de Identificación Tributaria)',\n        value: 'CUIT'\n      }\n    ],\n    country: {\n      name: 'Argentina',\n      alpha2Code: 'AR'\n    },\n    phoneFormat: {\n      code: '54',\n      mask: '000 00000000'\n    },\n    currencyFormat: {\n      code: 'ARS',\n      symbol: '$',\n      thousands: '.',\n      decimal: ',',\n      precision: 2\n    }\n  },\n  bo: {\n    tax: [\n      {\n        name: 'RUC (Registro Único de Contribuyentes)',\n        value: 'RUC'\n      }\n    ],\n    country: {\n      name: 'Bolivia',\n      alpha2Code: 'BO'\n    },\n    phoneFormat: {\n      code: '591',\n      mask: '000 - 0000000'\n    },\n    currencyFormat: {\n      code: 'BOB',\n      symbol: 'Bs.',\n      thousands: '.',\n      decimal: ',',\n      precision: 2\n    }\n  },\n  br: {\n    tax: [\n      {\n        name: 'CPF (Cadastro de Persona Física)',\n        value: 'CPF'\n      },\n      {\n        name: 'CNPJ (Cadastro de Persona Jurídica)',\n        value: 'CNPJ'\n      }\n    ],\n    country: {\n      name: 'Brazil',\n      alpha2Code: 'BR'\n    },\n    phoneFormat: {\n      code: '55',\n      mask: '00 0 0000 0000'\n    },\n    currencyFormat: {\n      code: 'BRL',\n      symbol: 'R$',\n      thousands: '.',\n      decimal: ',',\n      precision: 2\n    }\n  },\n  ca: {\n    disabled: true,\n    tax: [\n      {\n        name: 'SIN (Social Insurance Number)',\n        value: 'SIN'\n      },\n      {\n        name: `NAS (numéro d'assurance social)`,\n        value: 'NAS'\n      }\n    ],\n    country: {\n      name: 'Canada',\n      alpha2Code: 'CA'\n    },\n    phoneFormat: {\n      code: '1',\n      mask: '000 000 0000'\n    },\n    currencyFormat: {\n      code: 'CAD',\n      symbol: '$',\n      thousands: ',',\n      decimal: '.',\n      precision: 2\n    }\n  },\n  cl: {\n    tax: [\n      {\n        name: 'RUT (Rol Único Tributario)',\n        value: 'RUT'\n      }\n    ],\n    country: {\n      name: 'Chile',\n      alpha2Code: 'CL'\n    },\n    phoneFormat: {\n      code: '56',\n      mask: '00 0000000'\n    },\n    currencyFormat: {\n      code: 'CLP',\n      symbol: '$',\n      thousands: ',',\n      decimal: '.',\n      precision: 0\n    }\n  },\n  co: {\n    tax: [\n      {\n        name: 'NIT (Número de Identificación Tributaria)',\n        value: 'NIT'\n      }\n    ],\n    country: {\n      name: 'Colombia',\n      alpha2Code: 'CO'\n    },\n    phoneFormat: {\n      code: '57',\n      mask: '000 000 0000'\n    },\n    currencyFormat: {\n      code: 'COP',\n      symbol: '$',\n      thousands: '.',\n      decimal: ',',\n      precision: 0\n    }\n  },\n  cr: {\n    disabled: true,\n    tax: [\n      {\n        name: 'NITE (Número de Identificación Tributaria Especial)',\n        value: 'NITE'\n      }\n    ],\n    country: {\n      name: 'Costa Rica',\n      alpha2Code: 'CR'\n    },\n    phoneFormat: {\n      code: '506',\n      mask: '000000000000'\n    },\n    currencyFormat: {\n      code: 'CRC',\n      symbol: '₡',\n      thousands: '.',\n      decimal: ',',\n      precision: 2\n    }\n  },\n  ec: {\n    disabled: true,\n    tax: [\n      {\n        name: 'RUC (Registro Único de Contribuyentes)',\n        value: 'RUC'\n      }\n    ],\n    country: {\n      name: 'Ecuador',\n      alpha2Code: 'EC'\n    },\n    phoneFormat: {\n      code: '593',\n      mask: '000000000000'\n    },\n    currencyFormat: {\n      code: 'USD',\n      symbol: '$',\n      thousands: ',',\n      decimal: '.',\n      precision: 2\n    }\n  },\n  mx: {\n    tax: [\n      {\n        name: 'RFC (Registro Federal de Contribuyentes)',\n        value: 'RFC'\n      }\n    ],\n    country: {\n      name: 'Mexico',\n      alpha2Code: 'MX'\n    },\n    phoneFormat: {\n      code: '52',\n      mask: '00 00000 0000'\n    },\n    currencyFormat: {\n      code: 'MXN',\n      symbol: '$',\n      thousands: ',',\n      decimal: '.',\n      precision: 2\n    }\n  },\n  pe: {\n    tax: [\n      {\n        name: 'RUC (Registro Único de Contribuyentes)',\n        value: 'RUC'\n      }\n    ],\n    country: {\n      name: 'Peru',\n      alpha2Code: 'PE'\n    },\n    phoneFormat: {\n      code: '51',\n      mask: '000000000000'\n    },\n    currencyFormat: {\n      code: 'PEN',\n      symbol: 'S/.',\n      thousands: '.',\n      decimal: ',',\n      precision: 2\n    }\n  },\n  us: {\n    disabled: true,\n    tax: [\n      {\n        name: 'TIN (Taxpayer Identification Number)',\n        value: 'TIN'\n      }\n    ],\n    country: {\n      name: 'United States',\n      alpha2Code: 'US'\n    },\n    phoneFormat: {\n      code: '1',\n      mask: '000 000 0000'\n    },\n    currencyFormat: {\n      code: 'USD',\n      symbol: '$',\n      thousands: ',',\n      decimal: '.',\n      precision: 2\n    }\n  },\n  uy: {\n    tax: [\n      {\n        name: 'RUT (Registro Único Tributario)',\n        value: 'RUT'\n      }\n    ],\n    country: {\n      name: 'Uruguay',\n      alpha2Code: 'UY'\n    },\n    phoneFormat: {\n      code: '598',\n      mask: '000000000000'\n    },\n    currencyFormat: {\n      code: 'UYU',\n      symbol: '$',\n      thousands: ',',\n      decimal: '.',\n      precision: 2\n    }\n  },\n  ve: {\n    disabled: true,\n    tax: [\n      {\n        name: 'RIF (Registro de Información Fiscal)',\n        value: 'RIF'\n      }\n    ],\n    country: {\n      name: 'Venezuela',\n      alpha2Code: 'VE'\n    },\n    phoneFormat: {\n      code: '58',\n      mask: '000 000 0000'\n    },\n    currencyFormat: {\n      code: 'VEF',\n      symbol: 'Bs.',\n      thousands: '.',\n      decimal: ',',\n      precision: 0\n    }\n  }\n};\n\nexport const TEXT_TABLE: { [key: string]: { [key: string]: string } } = {\n  es: {\n    NO_CONTENT: 'No hay registros en esta tabla',\n  },\n  en: {\n    NO_CONTENT: 'There are no records in this table',\n  },\n  pr: {\n    NO_CONTENT: 'Não há registros nesta tabela',\n  }\n};\n","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { TEXT_TABLE } from './gs-tables.constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GsTablesService {\n  constructor(private translateService: TranslateService) { }\n\n  public objectKeysToArray(rawArray: Array<object>): Array<string> {\n    const contentKeys = [];\n\n    for (const keys in rawArray[0]) {\n      if (Object.prototype.hasOwnProperty.call(rawArray[0], keys) && rawArray[0][keys]) {\n        contentKeys.push(keys);\n      }\n    }\n\n    return contentKeys;\n  }\n\n  public getTranslate(key: string, param?: string) {\n    let lang = this.translateService.currentLang;\n\n    if (!lang) {\n      console.warn(`translateService.currentLang is not set, using default language: 'es'`);\n      lang = 'es';\n    }\n\n    const messageLang = !TEXT_TABLE[lang] ?\n      console.warn(`We don't have support for language ${lang}. Please email us to hi@tavoohoh.com. Using default language: 'es'`) :\n      TEXT_TABLE[lang];\n\n    let message = messageLang[key];\n\n    if (param) {\n      message = message.replace('${param}', param);\n    }\n\n    return message;\n  }\n}\n","import {\n  Component,\n  Input,\n  HostBinding,\n  HostListener,\n  ViewChild,\n  ElementRef,\n  Inject,\n  Output,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport { GTable, GTableRowAction, GTableAction, GTableStyle, GStyles } from './gs-tables.widgets';\nimport { GsTablesService } from './gs-tables.service';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { LOCATION } from './gs-tables.constants';\nimport { GKeyType, GCustomTemplate, GSelectableValue, GTableDataValue, GTableFooterAction } from './gs-tables.models';\nimport { GTypeRowEnum } from './gs-tables.enum';\n\n// https://uxdesign.cc/design-better-data-tables-4ecc99d23356\n\n@Component({\n  selector: 'gs-table',\n  templateUrl: './gs-tables.component.html',\n  styleUrls: ['./gs-tables.component.sass']\n})\nexport class GsTablesComponent implements OnChanges {\n  /**\n   * Table data\n   *\n   * @description\n   * An `GTable` object with table configuration\n   */\n  @Input() private tableData: GTable;\n  /**\n   * Current page being displayed\n   * This value is required to display pagination\n   */\n  @Input() public currentPage: number;\n  /**\n   * Total of pages\n   * This value is required to display pagination\n   */\n  @Input() public totalOfPages: number;\n  /**\n   * Event emitted when an action is clicked\n   */\n  @Output() private rowActionClick = new EventEmitter<GTableAction>();\n  /**\n   * Event emitted when `navigateNext` button is clicked\n   * @deprecated use `navigateTo` event instead\n   */\n  @Output() private navigateNext = new EventEmitter<void>();\n  /**\n   * Event emitted when `navigatePrevious button is clicked\n   * @deprecated use `navigateTo` event instead\n   */\n  @Output() private navigatePrevious = new EventEmitter<void>();\n  /**\n   * Event emitted when any of the pagination buttons are clicked\n   */\n  @Output() private navigateTo = new EventEmitter<number>();\n  /**\n   * Event emitted when a row is selected\n   */\n  @Output() private rowValueChanged = new EventEmitter<GSelectableValue>();\n  /**\n   * Event emitted when any value of the table is modified by this component\n   */\n  @Output() private tableDataChanged = new EventEmitter<Array<GTableDataValue>>();\n  /**\n   * Event emitted when a custom footer action is clicked\n   */\n  @Output() private tableActionClick = new EventEmitter<GTableFooterAction>();\n\n  @ViewChild('tableContentElement', { static: false }) private tableContentElement: ElementRef;\n  @ViewChild('tableHeaderElement', { static: false }) private tableHeaderElement: ElementRef;\n\n  public tableHeader: Array<string>;\n  public tableContentKeys: Array<string>;\n  public tableContent: Array<GTableDataValue>;\n  public additionalData: boolean;\n  public selectable: boolean;\n  public selectableAllSelected: boolean;\n  public selectedAdditionalData: number;\n  public customFooterActions: Array<GTableFooterAction>;\n  public tableContentPadding: number;\n  public tableRowActions: GTableRowAction;\n  public tableStyle: GTableStyle;\n  public tablesKeyType: Array<GKeyType>;\n  public tableCustomTemplates: Array<GCustomTemplate>;\n  private customStyles: GStyles;\n\n  public noTableData: boolean;\n  public noContentText: string;\n  public tableStyleType = GTableStyle;\n\n  public canNavigateNext: boolean;\n  public canNavigatePrevious: boolean;\n\n  constructor(\n    private sanitizer: DomSanitizer,\n    private tableService: GsTablesService,\n    @Inject('customStyles') customStyles\n  ) {\n    this.customStyles = customStyles;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!changes) {\n      return;\n    }\n\n    if (changes.tableData && changes.tableData.currentValue) {\n      this.tableData = changes.tableData.currentValue;\n\n      if (this.tableData.data) {\n        this.noTableData = false;\n        this.tableDataAdapter();\n      } else {\n        this.noTableData = true;\n        this.onInputDataError();\n      }\n\n      if (this.tableData.options) {\n        if (this.tableData.options.hasAdditionalData) {\n          this.additionalData = true;\n        }\n\n        if (this.tableData.options.selectable) {\n          this.selectable = true;\n        }\n\n        if (this.tableData.options.tableActions) {\n          this.customFooterActions = this.tableData.options.tableActions;\n        }\n      }\n    }\n\n    if (changes.currentPage || this.currentPage) {\n      this.currentPage = changes.currentPage ? changes.currentPage.currentValue : this.currentPage;\n    } else {\n      this.currentPage = null;\n    }\n\n    if (changes.totalOfPages || this.totalOfPages) {\n      this.totalOfPages = changes.totalOfPages ? changes.totalOfPages.currentValue : this.totalOfPages;\n    } else {\n      this.totalOfPages = null;\n    }\n\n    if (this.currentPage && this.totalOfPages) {\n      this.setTableFooter();\n    } else if (this.currentPage || this.totalOfPages) {\n      return console.warn(\n        'GS Table building warning:' + '\\n\\n' +\n        'If you wish to display current and total of pages please add to your table options `currentPage` and `totalOfPages`'\n      );\n    }\n\n    setTimeout(() => {\n      this.setContentWidth();\n    });\n  }\n\n  private setTableFooter() {\n    if (this.currentPage <= 1) {\n      this.canNavigatePrevious = false;\n    } else {\n      this.canNavigatePrevious = true;\n    }\n\n    if (this.currentPage + 1 > this.totalOfPages) {\n      this.canNavigateNext = false;\n    } else {\n      this.canNavigateNext = true;\n    }\n  }\n\n  private tableDataAdapter() {\n    this.tableStyle = this.tableData.options.style || GTableStyle.TABLE;\n    this.tablesKeyType = this.tableData.keyTypes || null;\n\n    if (this.tablesKeyType) {\n      this.formatData();\n    }\n\n    this.tableContent = this.tableData.data;\n    this.noTableData = this.tableData.data.length > 0 ? false : true;\n    this.noContentText = this.tableData.options.noContentText\n      ? this.tableData.options.noContentText\n      : this.tableService.getTranslate('NO_CONTENT');\n    this.tableRowActions = this.tableData.options.rowActions || null;\n    this.tableContentKeys = this.tableData.keyNames ? this.tableData.keyNames : this.tableService.objectKeysToArray(this.tableContent);\n\n    if (this.tableStyle === GTableStyle.SINGLE) {\n      this.tableContentKeys = [this.tableContentKeys[0], this.tableContentKeys[1]];\n    } else {\n      this.tableHeader = this.tableData.header || this.tableContentKeys;\n    }\n  }\n\n  private formatData() {\n    this.tablesKeyType.forEach(type => {\n      // tslint:disable-next-line: prefer-for-of\n      for (let i = 0; i < this.tableData.data.length; i++) {\n        switch (type.type) {\n          case GTypeRowEnum.CURRENCY:\n            this.tableData.data[i][type.key] = this.formatCurrency(this.tableData.data[i][type.key].toString());\n            break;\n          case GTypeRowEnum.PHONE:\n          // TODO create format Phone\n        }\n      }\n    });\n  }\n\n  private formatCurrency(valueTable: string): string {\n    let value = valueTable;\n    const location = LOCATION[this.tableData.options.country] || LOCATION[`co`];\n\n    const prefix = location.currencyFormat.symbol;\n    const suffix = location.currencyFormat.code;\n    const thousandsSeparator = location.currencyFormat.thousands;\n    const decimalSeparator = location.currencyFormat.decimal;\n    const precision = location.currencyFormat.precision;\n\n    let inputVal = valueTable.toString() || '0';\n\n    // remove any leading zeros\n    if (inputVal.substring(0, 1) === '0') {\n      inputVal = inputVal.replace(/^[0|\\D]*/, '');\n    }\n\n    // format decimal if applies\n    if (!inputVal || inputVal.length === 1 && inputVal.substring(0, 1) === '0') {\n      let emptyDecimals = '0';\n\n      if (precision > 0) {\n        for (let index = 0; index < precision; index++) {\n          emptyDecimals = emptyDecimals + '0';\n        }\n      }\n      inputVal = emptyDecimals;\n    }\n\n    const cleanValue = inputVal.replace(/\\D/g, '');\n\n    let decimals = null;\n    let thousands = null;\n\n    // format number as currency\n    if (precision > 0) {\n      decimals = cleanValue.slice(precision - precision * 2);\n\n      if (decimals.length < precision) {\n        for (let index = 0; index < precision - Number(decimals); index++) {\n          decimals = '0' + decimals;\n        }\n        thousands = '0';\n      } else {\n        thousands = cleanValue.substring(0, cleanValue.length - precision) || '0';\n      }\n\n    } else {\n      thousands = cleanValue;\n    }\n\n    const formattedThousands = thousands.replace(/\\D/g, '').replace(/\\B(?=(\\d{3})+(?!\\d))/g, thousandsSeparator);\n\n    value = `${prefix} ${formattedThousands + (decimals ? decimalSeparator + decimals : '')} ${suffix}`;\n\n    return value;\n  }\n\n  @HostBinding('attr.style')\n  public get valueAsStyle(): any {\n    let variables = '';\n\n    // Layout\n    if (!this.noTableData && this.tableStyle === GTableStyle.TABLE && this.tableHeader.length) {\n      let extraColumns = '';\n\n      if (this.selectable) {\n        extraColumns = `${extraColumns} 30px`;\n      }\n\n      if (this.additionalData) {\n        extraColumns = `${extraColumns} 30px`;\n      }\n\n      if (this.tableRowActions && !this.tableRowActions.hidden) {\n        variables = variables + `--gs-repeat: ${extraColumns} repeat(${this.tableHeader.length}, 1fr) 90px!important;`;\n      } else {\n        variables = variables + `--gs-repeat: ${extraColumns} repeat(${this.tableHeader.length}, 1fr)!important;`;\n      }\n    }\n\n    // UI\n    if (this.customStyles) {\n      if (this.customStyles.color) {\n        variables = variables + `--gs-font-color: ${this.customStyles.color}!important;`;\n      }\n      if (this.customStyles.ui.fontSize) {\n        variables = variables + `--gs-font-size: ${this.customStyles.ui.fontSize}!important;`;\n      }\n      if (this.customStyles.color.primary) {\n        variables = variables + `--gs-primary-color: ${this.customStyles.color.primary}!important;`;\n      }\n      if (this.customStyles.color.secondary) {\n        variables = variables + `--gs-secondary-color: ${this.customStyles.color.secondary}!important;`;\n      }\n      if (this.customStyles.color.neutral) {\n        variables = variables + `--gs-neutral-color: ${this.customStyles.color.neutral}!important;`;\n      }\n      if (this.customStyles.color.border) {\n        variables = variables + `--gs-border-color: ${this.customStyles.color.border}!important;`;\n      }\n      if (this.customStyles.color.white) {\n        variables = variables + `--gs-white-color: ${this.customStyles.color.white}!important;`;\n      }\n      if (this.customStyles.ui.padding) {\n        variables = variables + `--gs-padding: ${this.customStyles.ui.padding}!important;`;\n      }\n      if (this.customStyles.ui.primaryButton) {\n        if (this.customStyles.ui.primaryButton.padding) {\n          variables = variables + `--gs-button-padding: ${this.customStyles.ui.primaryButton.padding}!important;`;\n        }\n        if (this.customStyles.ui.primaryButton.color) {\n          variables = variables + `--gs-button-color: ${this.customStyles.ui.primaryButton.color}!important;`;\n        }\n        if (this.customStyles.ui.primaryButton.background) {\n          variables = variables + `--gs-button-background: ${this.customStyles.ui.primaryButton.background}!important;`;\n        }\n        if (this.customStyles.ui.primaryButton.borderSize) {\n          variables = variables + `--gs-button-border-size: ${this.customStyles.ui.primaryButton.borderSize}!important;`;\n        }\n        if (this.customStyles.ui.primaryButton.borderStyle) {\n          variables = variables + `--gs-button-border-style: ${this.customStyles.ui.primaryButton.borderStyle}!important;`;\n        }\n        if (this.customStyles.ui.primaryButton.borderColor) {\n          variables = variables + `--gs-button-border-color: ${this.customStyles.ui.primaryButton.borderColor}!important;`;\n        }\n        if (this.customStyles.ui.primaryButton.borderRadius) {\n          variables = variables + `--gs-button-border-radius: ${this.customStyles.ui.primaryButton.borderRadius}!important;`;\n        }\n        if (this.customStyles.ui.primaryButton.borderTop) {\n          variables = variables + `--gs-button-border-top: ${this.customStyles.ui.primaryButton.borderTop}!important;`;\n        }\n        if (this.customStyles.ui.primaryButton.borderRight) {\n          variables = variables + `--gs-button-border-right: ${this.customStyles.ui.primaryButton.borderRight}!important;`;\n        }\n        if (this.customStyles.ui.primaryButton.borderBottom) {\n          variables = variables + `--gs-button-border-bottom: ${this.customStyles.ui.primaryButton.borderBottom}!important;`;\n        }\n        if (this.customStyles.ui.primaryButton.borderLeft) {\n          variables = variables + `--gs-button-border-left: ${this.customStyles.ui.primaryButton.borderLeft}!important;`;\n        }\n      }\n    }\n\n    return this.sanitizer.bypassSecurityTrustStyle(\n      variables\n    );\n  }\n\n  @HostListener('window:resize', ['$event'])\n  public onResize(event) {\n    this.setContentWidth();\n  }\n\n  private setContentWidth() {\n    if (!this.noTableData && this.tableStyle === GTableStyle.TABLE) {\n      this.tableContentPadding =\n        this.tableHeaderElement.nativeElement.offsetWidth - this.tableContentElement.nativeElement.offsetWidth;\n    }\n  }\n\n  public hdlRowAction(action: GTableAction): void {\n    this.rowActionClick.emit(action);\n    this.selectedAdditionalData = null;\n  }\n\n  /**\n   * Navigate next or previous based on\n   * @param next if true navigate next, else previous\n   *\n   * @deprecated use `onNavigateTo` instead\n   */\n  public onNavigate(next: boolean): void {\n    if (next) {\n      // tslint:disable-next-line: deprecation\n      this.navigateNext.emit();\n      this.navigateTo.emit(this.currentPage + 1);\n    } else {\n      // tslint:disable-next-line: deprecation\n      this.navigatePrevious.emit();\n      this.navigateTo.emit(this.currentPage - 1);\n    }\n    this.selectedAdditionalData = null;\n  }\n\n  /**\n   * Navigate to specific page\n   * @param page number of page\n   *\n   * returns the next page value\n   */\n  public onNavigateTo(page: number): void {\n    this.navigateTo.emit(page);\n    this.selectedAdditionalData = null;\n  }\n\n  private onInputDataError(): void {\n    return console.error(\n      'GS Table building err: Please provide tableData:' + '\\n\\n' +\n      '1. In your template make sure you have:' + '\\n\\n' +\n      '\\xa0' + '<gs-table [tableData]=\"tableData\"></gs-table>' + '\\n\\n' +\n      '2. In your component declare `tableData`:' + '\\n\\n' +\n      '\\xa0public tableData = {' + '\\n' +\n      '\\xa0\\xa0\\xa0' + 'data: Array<object>;' + '\\n' +\n      '\\xa0\\xa0\\xa0' + 'header?: Array<string>;' + '\\n' +\n      '\\xa0\\xa0\\xa0' + 'options?: {' + '\\n' +\n      '\\xa0\\xa0\\xa0\\xa0\\xa0' + 'style?: GTableStyle;' + '\\n' +\n      '\\xa0\\xa0\\xa0\\xa0\\xa0' + 'rowActions?: GTableRowAction;' + '\\n' +\n      '\\xa0\\xa0\\xa0' + '}' + '\\n' +\n      '\\xa0}'\n    );\n  }\n\n  public toggleAdditionalData(selectedAdditionalData: number, $event?: { target: { id: string, nodeName: string } }): void {\n    if (!this.additionalData || ($event && (\n      $event.target.id === 'rowActionButton' ||\n      $event.target.id === 'gsbtnany'\n    ))) {\n      return;\n    }\n\n    this.selectedAdditionalData = this.selectedAdditionalData === selectedAdditionalData ? null : selectedAdditionalData;\n  }\n\n  /**\n   * Selectable methods\n   */\n  public onRowValueChanged(newRowValue: GSelectableValue): void {\n    this.tableContent[newRowValue.index || 0].selectable = newRowValue.value;\n    this.rowValueChanged.emit(newRowValue);\n    this.tableDataChanged.emit(this.tableContent);\n  }\n\n  public toggleSelectableSelection(newRowValue: GSelectableValue): void {\n    this.selectableAllSelected = newRowValue.value;\n    // tslint:disable-next-line\n    for (let i = 0; i < this.tableContent.length; i++) {\n      this.tableContent[i].selectable = this.selectableAllSelected;\n    }\n    this.tableDataChanged.emit(this.tableContent);\n  }\n\n  /**\n   * Footer actions\n   */\n  public onFooterActionClicked(action: GTableFooterAction): void {\n    this.tableActionClick.emit(action);\n  }\n}\n","import { Component, ViewChild, ElementRef, Input, Output, EventEmitter, HostListener, OnChanges, SimpleChanges } from '@angular/core';\nimport { GTableRowAction, GTableAction } from '../../gs-tables.widgets';\n\n@Component({\n  selector: 'gs-table-row-actions',\n  templateUrl: './row-actions.component.html',\n  styleUrls: ['./row-actions.component.sass']\n})\nexport class GsTableRowActionsComponent implements OnChanges {\n  public openMenu: boolean;\n  public menuHasActions = false;\n\n  @ViewChild('optionsContainer', { static: false }) public optionsContainer: ElementRef;\n  @ViewChild('optionsButton', { static: true }) public optionsButton: ElementRef;\n\n  @Input() public rowAction: GTableRowAction;\n  @Input() public rowData: {};\n  @Output() private rowActionEvent = new EventEmitter<GTableAction>();\n\n  @HostListener('document:click', ['$event'])\n  clickout(event) {\n    if (this.optionsButton && this.optionsButton.nativeElement.contains(event.target)) {\n      this.onToggleActionsMenu();\n    } else if (this.openMenu && !this.optionsContainer.nativeElement.contains(event.target)) {\n      this.openMenu = false;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.rowAction && changes.rowAction.currentValue && changes.rowAction.currentValue.actions) {\n      changes.rowAction.currentValue.actions.forEach((action: GTableAction) => {\n        if (this.displayActionIf(action)) {\n          this.menuHasActions = true;\n        }\n      });\n    } else {\n      this.menuHasActions = false;\n    }\n  }\n\n  public hdlAction(action: GTableAction): void {\n    this.openMenu = false;\n    action.row = this.rowData;\n    this.rowActionEvent.emit(action);\n  }\n\n  public onToggleActionsMenu(): void {\n    this.openMenu = !this.openMenu;\n  }\n\n  public displayActionIf(action: GTableAction): boolean {\n    if (action.hidden) {\n      return false;\n    } else if (action.displayIf) {\n      return this.rowData[action.displayIf.model].toString() === action.displayIf.hasValue.toString() ? true : false;\n    } else {\n      return true;\n    }\n  }\n}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { GAdditionalData } from '../../gs-tables.models';\n\n@Component({\n  selector: 'gs-table-additional-data',\n  templateUrl: './additional-data.component.html',\n  styleUrls: ['./additional-data.component.sass']\n})\nexport class GsAdditionalDataComponent implements OnChanges {\n  @Input() public additionalData: Array<GAdditionalData>;\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.additionalData.currentValue) {\n      this.additionalData = changes.additionalData.currentValue;\n    }\n  }\n}\n","import { Component, Input, OnChanges, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { GSelectableValue } from '../../gs-tables.models';\n\n@Component({\n  selector: 'gs-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.sass']\n})\nexport class GsCheckboxComponent implements OnChanges {\n  @Input() public value: boolean;\n  @Input() public rowIndex: number;\n\n  @Output() private valueChanged = new EventEmitter<GSelectableValue>();\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes) {\n      if (changes.value && changes.value.currentValue) {\n        this.value = changes.value.currentValue;\n      }\n\n      if (changes.rowIndex && changes.rowIndex.currentValue) {\n        this.rowIndex = changes.rowIndex.currentValue;\n      }\n    }\n  }\n\n  public onValueChanged(): void {\n    this.valueChanged.emit({\n      value: this.value,\n      index: this.rowIndex || null\n    });\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { GsTablesComponent } from './gs-tables.component';\nimport { GsTableRowActionsComponent } from './gs-table-elements/row-actions/row-actions.component';\nimport { GsAdditionalDataComponent } from './gs-table-elements/additional-data/additional-data.component';\nimport { GsCheckboxComponent } from './gs-table-elements/checkbox/checkbox.component';\nimport { GStyles } from './gs-tables.widgets';\n\n@NgModule({\n  declarations: [\n    GsTablesComponent,\n    GsTableRowActionsComponent,\n    GsAdditionalDataComponent,\n    GsCheckboxComponent\n  ],\n  imports: [\n    CommonModule,\n    TranslateModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  exports: [GsTablesComponent]\n})\nexport class GsTablesModule {\n  public static forRoot(styles?: GStyles): ModuleWithProviders {\n    return {\n      ngModule: GsTablesModule,\n      providers: [\n        {\n          provide: 'customStyles',\n          useValue: styles\n        }\n      ]\n    };\n  }\n}\n"]}