{"version":3,"file":"rappipay-gs-tables.js","sources":["ng://@rappipay/gs-tables/lib/gs-tables.constants.ts","ng://@rappipay/gs-tables/lib/gs-tables.service.ts","ng://@rappipay/gs-tables/lib/gs-tables.widgets.ts","ng://@rappipay/gs-tables/lib/gs-tables.enum.ts","ng://@rappipay/gs-tables/lib/gs-tables.component.ts","ng://@rappipay/gs-tables/lib/gs-table-elements/row-actions/row-actions.component.ts","ng://@rappipay/gs-tables/lib/gs-table-elements/additional-data/additional-data.component.ts","ng://@rappipay/gs-tables/lib/gs-table-elements/checkbox/checkbox.component.ts","ng://@rappipay/gs-tables/lib/gs-tables.module.ts","ng://@rappipay/gs-tables/public-api.ts","ng://@rappipay/gs-tables/rappipay-gs-tables.ts"],"sourcesContent":["import { GLocation } from './gs-tables.models';\n\nexport const LOCATION: { [key: string]: GLocation } = {\n  ar: {\n    tax: [\n      {\n        name: 'CUIT (Código Único de Identificación Tributaria)',\n        value: 'CUIT'\n      }\n    ],\n    country: {\n      name: 'Argentina',\n      alpha2Code: 'AR'\n    },\n    phoneFormat: {\n      code: '54',\n      mask: '000 00000000'\n    },\n    currencyFormat: {\n      code: 'ARS',\n      symbol: '$',\n      thousands: '.',\n      decimal: ',',\n      precision: 2\n    }\n  },\n  bo: {\n    tax: [\n      {\n        name: 'RUC (Registro Único de Contribuyentes)',\n        value: 'RUC'\n      }\n    ],\n    country: {\n      name: 'Bolivia',\n      alpha2Code: 'BO'\n    },\n    phoneFormat: {\n      code: '591',\n      mask: '000 - 0000000'\n    },\n    currencyFormat: {\n      code: 'BOB',\n      symbol: 'Bs.',\n      thousands: '.',\n      decimal: ',',\n      precision: 2\n    }\n  },\n  br: {\n    tax: [\n      {\n        name: 'CPF (Cadastro de Persona Física)',\n        value: 'CPF'\n      },\n      {\n        name: 'CNPJ (Cadastro de Persona Jurídica)',\n        value: 'CNPJ'\n      }\n    ],\n    country: {\n      name: 'Brazil',\n      alpha2Code: 'BR'\n    },\n    phoneFormat: {\n      code: '55',\n      mask: '00 0 0000 0000'\n    },\n    currencyFormat: {\n      code: 'BRL',\n      symbol: 'R$',\n      thousands: '.',\n      decimal: ',',\n      precision: 2\n    }\n  },\n  ca: {\n    disabled: true,\n    tax: [\n      {\n        name: 'SIN (Social Insurance Number)',\n        value: 'SIN'\n      },\n      {\n        name: `NAS (numéro d'assurance social)`,\n        value: 'NAS'\n      }\n    ],\n    country: {\n      name: 'Canada',\n      alpha2Code: 'CA'\n    },\n    phoneFormat: {\n      code: '1',\n      mask: '000 000 0000'\n    },\n    currencyFormat: {\n      code: 'CAD',\n      symbol: '$',\n      thousands: ',',\n      decimal: '.',\n      precision: 2\n    }\n  },\n  cl: {\n    tax: [\n      {\n        name: 'RUT (Rol Único Tributario)',\n        value: 'RUT'\n      }\n    ],\n    country: {\n      name: 'Chile',\n      alpha2Code: 'CL'\n    },\n    phoneFormat: {\n      code: '56',\n      mask: '00 0000000'\n    },\n    currencyFormat: {\n      code: 'CLP',\n      symbol: '$',\n      thousands: ',',\n      decimal: '.',\n      precision: 0\n    }\n  },\n  co: {\n    tax: [\n      {\n        name: 'NIT (Número de Identificación Tributaria)',\n        value: 'NIT'\n      }\n    ],\n    country: {\n      name: 'Colombia',\n      alpha2Code: 'CO'\n    },\n    phoneFormat: {\n      code: '57',\n      mask: '000 000 0000'\n    },\n    currencyFormat: {\n      code: 'COP',\n      symbol: '$',\n      thousands: '.',\n      decimal: ',',\n      precision: 0\n    }\n  },\n  cr: {\n    disabled: true,\n    tax: [\n      {\n        name: 'NITE (Número de Identificación Tributaria Especial)',\n        value: 'NITE'\n      }\n    ],\n    country: {\n      name: 'Costa Rica',\n      alpha2Code: 'CR'\n    },\n    phoneFormat: {\n      code: '506',\n      mask: '000000000000'\n    },\n    currencyFormat: {\n      code: 'CRC',\n      symbol: '₡',\n      thousands: '.',\n      decimal: ',',\n      precision: 2\n    }\n  },\n  ec: {\n    disabled: true,\n    tax: [\n      {\n        name: 'RUC (Registro Único de Contribuyentes)',\n        value: 'RUC'\n      }\n    ],\n    country: {\n      name: 'Ecuador',\n      alpha2Code: 'EC'\n    },\n    phoneFormat: {\n      code: '593',\n      mask: '000000000000'\n    },\n    currencyFormat: {\n      code: 'USD',\n      symbol: '$',\n      thousands: ',',\n      decimal: '.',\n      precision: 2\n    }\n  },\n  mx: {\n    tax: [\n      {\n        name: 'RFC (Registro Federal de Contribuyentes)',\n        value: 'RFC'\n      }\n    ],\n    country: {\n      name: 'Mexico',\n      alpha2Code: 'MX'\n    },\n    phoneFormat: {\n      code: '52',\n      mask: '00 00000 0000'\n    },\n    currencyFormat: {\n      code: 'MXN',\n      symbol: '$',\n      thousands: ',',\n      decimal: '.',\n      precision: 2\n    }\n  },\n  pe: {\n    tax: [\n      {\n        name: 'RUC (Registro Único de Contribuyentes)',\n        value: 'RUC'\n      }\n    ],\n    country: {\n      name: 'Peru',\n      alpha2Code: 'PE'\n    },\n    phoneFormat: {\n      code: '51',\n      mask: '000000000000'\n    },\n    currencyFormat: {\n      code: 'PEN',\n      symbol: 'S/.',\n      thousands: '.',\n      decimal: ',',\n      precision: 2\n    }\n  },\n  us: {\n    disabled: true,\n    tax: [\n      {\n        name: 'TIN (Taxpayer Identification Number)',\n        value: 'TIN'\n      }\n    ],\n    country: {\n      name: 'United States',\n      alpha2Code: 'US'\n    },\n    phoneFormat: {\n      code: '1',\n      mask: '000 000 0000'\n    },\n    currencyFormat: {\n      code: 'USD',\n      symbol: '$',\n      thousands: ',',\n      decimal: '.',\n      precision: 2\n    }\n  },\n  uy: {\n    tax: [\n      {\n        name: 'RUT (Registro Único Tributario)',\n        value: 'RUT'\n      }\n    ],\n    country: {\n      name: 'Uruguay',\n      alpha2Code: 'UY'\n    },\n    phoneFormat: {\n      code: '598',\n      mask: '000000000000'\n    },\n    currencyFormat: {\n      code: 'UYU',\n      symbol: '$',\n      thousands: ',',\n      decimal: '.',\n      precision: 2\n    }\n  },\n  ve: {\n    disabled: true,\n    tax: [\n      {\n        name: 'RIF (Registro de Información Fiscal)',\n        value: 'RIF'\n      }\n    ],\n    country: {\n      name: 'Venezuela',\n      alpha2Code: 'VE'\n    },\n    phoneFormat: {\n      code: '58',\n      mask: '000 000 0000'\n    },\n    currencyFormat: {\n      code: 'VEF',\n      symbol: 'Bs.',\n      thousands: '.',\n      decimal: ',',\n      precision: 0\n    }\n  }\n};\n\nexport const TEXT_TABLE: { [key: string]: { [key: string]: string } } = {\n  es: {\n    NO_CONTENT: 'No hay registros en esta tabla',\n  },\n  en: {\n    NO_CONTENT: 'There are no records in this table',\n  },\n  pr: {\n    NO_CONTENT: 'Não há registros nesta tabela',\n  }\n};\n","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { TEXT_TABLE } from './gs-tables.constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GsTablesService {\n  constructor(private translateService: TranslateService) { }\n\n  public objectKeysToArray(rawArray: Array<object>): Array<string> {\n    const contentKeys = [];\n\n    for (const keys in rawArray[0]) {\n      if (Object.prototype.hasOwnProperty.call(rawArray[0], keys) && rawArray[0][keys]) {\n        contentKeys.push(keys);\n      }\n    }\n\n    return contentKeys;\n  }\n\n  public getTranslate(key: string, param?: string) {\n    let lang = this.translateService.currentLang;\n\n    if (!lang) {\n      console.warn(`translateService.currentLang is not set, using default language: 'es'`);\n      lang = 'es';\n    }\n\n    const messageLang = !TEXT_TABLE[lang] ?\n      console.warn(`We don't have support for language ${lang}. Please email us to hi@tavoohoh.com. Using default language: 'es'`) :\n      TEXT_TABLE[lang];\n\n    let message = messageLang[key];\n\n    if (param) {\n      message = message.replace('${param}', param);\n    }\n\n    return message;\n  }\n}\n","import { GCountryCode } from './gs-tables.enum';\nimport { GKeyType, GCustomTemplate, GAdditionalData, GTableDataValue, GTableFooterAction } from './gs-tables.models';\n\n/**\n * A row action element\n * For example: 'edit', 'delete', etc...\n */\nexport interface GTableAction {\n  text: string;\n  hidden?: boolean;\n  displayIf?: {\n    model: string;\n    hasValue: any;\n  };\n  id?: string;\n  row?: {};\n}\n\n/**\n * An event triggered when clicking an action element\n */\nexport interface GTableRowAction {\n  text: string;\n  actions: Array<GTableAction>;\n  hidden?: boolean;\n  displayIf?: {\n    model: string;\n    hasValue: any;\n  };\n}\n\n/**\n * Input/button styles\n */\ninterface GInputStyle {\n  /* Input padding */\n  padding?: string;\n  /* Input text color */\n  color?: string;\n  /* Input backgroud */\n  background?: string;\n  /* Input border size */\n  borderSize?: string;\n  /* Input border style */\n  borderStyle?: string;\n  /* Input border color */\n  borderColor?: string;\n  /* Input radious */\n  borderRadius?: string;\n  /* Input border top width/size */\n  borderTop?: string;\n  /* Input border right width/size */\n  borderRight?: string;\n  /* Input border bottom width/size */\n  borderBottom?: string;\n  /* Input border left width/size */\n  borderLeft?: string;\n}\n\n/**\n * Library styles\n *\n * @description\n * Send style parameters to the library\n *\n */\nexport interface GStyles {\n  color?: {\n    /**\n     * Font color\n     * default: \"inherit\"\n     */\n    font?: string;\n\n    /**\n     * Primary color, used in important UI elements background and color\n     * default: \"#4588fd\"\n     */\n    primary?: string;\n\n    /**\n     * Secondary color, used in some UI elements background and color\n     * default: \"#7a9e9f\"\n     */\n    secondary?: string;\n\n    /**\n     * Neutral color, used in some UI elements background and color\n     * default: \"#4f6367\"\n     */\n    neutral?: string;\n\n    /**\n     * Border color\n     * default: \"#eeeeee\"\n     */\n    border?: string;\n\n    /**\n     * White color, all white colors used in UI elements\n     * default: \"#ffffff\"\n     */\n    white?: string;\n  };\n  ui?: {\n    /**\n     * Font size, all fonts size\n     * default: \".9rem\"\n     */\n    fontSize?: string;\n    /**\n     * Inner padding\n     */\n    padding?: string;\n    /**\n     * Input and button style\n     * Go to `GInputStyle` for detail\n     */\n    primaryButton?: GInputStyle;\n  };\n}\n\n/**\n * Table design\n */\nexport enum GTableStyle {\n  /**\n   * Display the table with all its columns, a header. Actions are optional.\n   */\n  TABLE = 'TABLE',\n  /**\n   * Disply only the first and second column, no header. Actions are optional.\n   */\n  SINGLE = 'SINGLE'\n}\n\n/**\n * Table configuration\n */\nexport interface GTable {\n  /**\n   * The table data as an array of objects\n   */\n  data?: Array<GTableDataValue>;\n  /**\n   * Table header values\n   *\n   * Optional. If not defined the header will use `GTable.data` key names\n   */\n  header?: Array<string>;\n  /**\n   * Key names of the data values\n   *\n   * Optional. If not defined the table will iterate over the keys of its data.\n   */\n  keyNames?: Array<string>;\n  /**\n   * Key type of the data values\n   */\n  keyTypes?: Array<GKeyType>;\n  /**\n   * Change the table design or add functionalities\n   */\n  options?: {\n    /**\n     * Set default country using `GFieldCountryCode` enum form gs-field\n     */\n    country?: GCountryCode;\n    /**\n     * Set the table design\n     *\n     * By Default: `GTableStyle.TABLE`\n     */\n    style?: GTableStyle;\n    /**\n     * A dropdown button with actions to trigger events\n     */\n    rowActions?: GTableRowAction;\n    /**\n     * The page currently being displayed\n     */\n    currentPage?: number;\n    /**\n     * The total of available pages\n     */\n    totalOfPages?: number;\n    /**\n     * set text when table has no data, for default it's spanish\n     */\n    noContentText?: string;\n    /**\n     * If true will be possible to select rows using checkboxes\n     */\n    selectable?: boolean;\n    /**\n     * A list of custom actions\n     */\n    tableActions?: Array<GTableFooterAction>;\n    /**\n     * Adds an expandable container for additional data\n     * Make sure to include an object with the additional data into your data array, it may look as follow\n     *\n     * data: [\n     *   {...}\n     *   {\n     *     [...]\n     *     [\n     *       ...\n     *        additionalData: [\n     *          {\n     *            label: string,\n     *            value: string\n     *          }\n     *        ]\n     *       ...\n     *     ]\n     *     [...]\n     *   }\n     *   {...}\n     * ]\n     */\n    hasAdditionalData?: boolean;\n  };\n}\n","export enum GCountryCode {\n  AR = 'ar',\n  BO = 'bo',\n  BR = 'br',\n  CA = 'ca',\n  CL = 'cl',\n  CO = 'co',\n  CR = 'cr',\n  EC = 'ec',\n  MX = 'mx',\n  PE = 'pe',\n  US = 'us',\n  UY = 'uy',\n  VE = 've'\n}\n\nexport enum GTypeRowEnum {\n  PHONE = 'phone',\n  CURRENCY = 'currency'\n}\n","import {\n  Component,\n  Input,\n  HostBinding,\n  HostListener,\n  ViewChild,\n  ElementRef,\n  Inject,\n  Output,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport { GTable, GTableRowAction, GTableAction, GTableStyle, GStyles } from './gs-tables.widgets';\nimport { GsTablesService } from './gs-tables.service';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { LOCATION } from './gs-tables.constants';\nimport { GKeyType, GCustomTemplate, GSelectableValue, GTableDataValue, GTableFooterAction } from './gs-tables.models';\nimport { GTypeRowEnum } from './gs-tables.enum';\n\n// https://uxdesign.cc/design-better-data-tables-4ecc99d23356\n\n@Component({\n  selector: 'gs-table',\n  templateUrl: './gs-tables.component.html',\n  styleUrls: ['./gs-tables.component.sass']\n})\nexport class GsTablesComponent implements OnChanges {\n  /**\n   * Table data\n   *\n   * @description\n   * An `GTable` object with table configuration\n   */\n  @Input() private tableData: GTable;\n  /**\n   * Current page being displayed\n   * This value is required to display pagination\n   */\n  @Input() public currentPage: number;\n  /**\n   * Total of pages\n   * This value is required to display pagination\n   */\n  @Input() public totalOfPages: number;\n  /**\n   * Event emitted when an action is clicked\n   */\n  @Output() private rowActionClick = new EventEmitter<GTableAction>();\n  /**\n   * Event emitted when `navigateNext` button is clicked\n   * @deprecated use `navigateTo` event instead\n   */\n  @Output() private navigateNext = new EventEmitter<void>();\n  /**\n   * Event emitted when `navigatePrevious button is clicked\n   * @deprecated use `navigateTo` event instead\n   */\n  @Output() private navigatePrevious = new EventEmitter<void>();\n  /**\n   * Event emitted when any of the pagination buttons are clicked\n   */\n  @Output() private navigateTo = new EventEmitter<number>();\n  /**\n   * Event emitted when a row is selected\n   */\n  @Output() private rowValueChanged = new EventEmitter<GSelectableValue>();\n  /**\n   * Event emitted when any value of the table is modified by this component\n   */\n  @Output() private tableDataChanged = new EventEmitter<Array<GTableDataValue>>();\n  /**\n   * Event emitted when a custom footer action is clicked\n   */\n  @Output() private tableActionClick = new EventEmitter<GTableFooterAction>();\n\n  @ViewChild('tableContentElement', { static: false }) private tableContentElement: ElementRef;\n  @ViewChild('tableHeaderElement', { static: false }) private tableHeaderElement: ElementRef;\n\n  public tableHeader: Array<string>;\n  public tableContentKeys: Array<string>;\n  public tableContent: Array<GTableDataValue>;\n  public additionalData: boolean;\n  public selectable: boolean;\n  public selectableAllSelected: boolean;\n  public selectedAdditionalData: number;\n  public customFooterActions: Array<GTableFooterAction>;\n  public tableContentPadding: number;\n  public tableRowActions: GTableRowAction;\n  public tableStyle: GTableStyle;\n  public tablesKeyType: Array<GKeyType>;\n  public tableCustomTemplates: Array<GCustomTemplate>;\n  private customStyles: GStyles;\n\n  public noTableData: boolean;\n  public noContentText: string;\n  public tableStyleType = GTableStyle;\n\n  public canNavigateNext: boolean;\n  public canNavigatePrevious: boolean;\n\n  constructor(\n    private sanitizer: DomSanitizer,\n    private tableService: GsTablesService,\n    @Inject('customStyles') customStyles\n  ) {\n    this.customStyles = customStyles;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!changes) {\n      return;\n    }\n\n    if (changes.tableData && changes.tableData.currentValue) {\n      this.tableData = changes.tableData.currentValue;\n\n      if (this.tableData.data) {\n        this.noTableData = false;\n        this.tableDataAdapter();\n      } else {\n        this.noTableData = true;\n        this.onInputDataError();\n      }\n\n      if (this.tableData.options) {\n        if (this.tableData.options.hasAdditionalData) {\n          this.additionalData = true;\n        }\n\n        if (this.tableData.options.selectable) {\n          this.selectable = true;\n        }\n\n        if (this.tableData.options.tableActions) {\n          this.customFooterActions = this.tableData.options.tableActions;\n        }\n      }\n    }\n\n    if (changes.currentPage || this.currentPage) {\n      this.currentPage = changes.currentPage ? changes.currentPage.currentValue : this.currentPage;\n    } else {\n      this.currentPage = null;\n    }\n\n    if (changes.totalOfPages || this.totalOfPages) {\n      this.totalOfPages = changes.totalOfPages ? changes.totalOfPages.currentValue : this.totalOfPages;\n    } else {\n      this.totalOfPages = null;\n    }\n\n    if (this.currentPage && this.totalOfPages) {\n      this.setTableFooter();\n    } else if (this.currentPage || this.totalOfPages) {\n      return console.warn(\n        'GS Table building warning:' + '\\n\\n' +\n        'If you wish to display current and total of pages please add to your table options `currentPage` and `totalOfPages`'\n      );\n    }\n\n    setTimeout(() => {\n      this.setContentWidth();\n    });\n  }\n\n  private setTableFooter() {\n    if (this.currentPage <= 1) {\n      this.canNavigatePrevious = false;\n    } else {\n      this.canNavigatePrevious = true;\n    }\n\n    if (this.currentPage + 1 > this.totalOfPages) {\n      this.canNavigateNext = false;\n    } else {\n      this.canNavigateNext = true;\n    }\n  }\n\n  private tableDataAdapter() {\n    this.tableStyle = this.tableData.options.style || GTableStyle.TABLE;\n    this.tablesKeyType = this.tableData.keyTypes || null;\n\n    if (this.tablesKeyType) {\n      this.formatData();\n    }\n\n    this.tableContent = this.tableData.data;\n    this.noTableData = this.tableData.data.length > 0 ? false : true;\n    this.noContentText = this.tableData.options.noContentText\n      ? this.tableData.options.noContentText\n      : this.tableService.getTranslate('NO_CONTENT');\n    this.tableRowActions = this.tableData.options.rowActions || null;\n    this.tableContentKeys = this.tableData.keyNames ? this.tableData.keyNames : this.tableService.objectKeysToArray(this.tableContent);\n\n    if (this.tableStyle === GTableStyle.SINGLE) {\n      this.tableContentKeys = [this.tableContentKeys[0], this.tableContentKeys[1]];\n    } else {\n      this.tableHeader = this.tableData.header || this.tableContentKeys;\n    }\n  }\n\n  private formatData() {\n    this.tablesKeyType.forEach(type => {\n      // tslint:disable-next-line: prefer-for-of\n      for (let i = 0; i < this.tableData.data.length; i++) {\n        switch (type.type) {\n          case GTypeRowEnum.CURRENCY:\n            this.tableData.data[i][type.key] = this.formatCurrency(this.tableData.data[i][type.key].toString());\n            break;\n          case GTypeRowEnum.PHONE:\n          // TODO create format Phone\n        }\n      }\n    });\n  }\n\n  private formatCurrency(valueTable: string): string {\n    let value = valueTable;\n    const location = LOCATION[this.tableData.options.country] || LOCATION[`co`];\n\n    const prefix = location.currencyFormat.symbol;\n    const suffix = location.currencyFormat.code;\n    const thousandsSeparator = location.currencyFormat.thousands;\n    const decimalSeparator = location.currencyFormat.decimal;\n    const precision = location.currencyFormat.precision;\n\n    let inputVal = valueTable.toString() || '0';\n\n    // remove any leading zeros\n    if (inputVal.substring(0, 1) === '0') {\n      inputVal = inputVal.replace(/^[0|\\D]*/, '');\n    }\n\n    // format decimal if applies\n    if (!inputVal || inputVal.length === 1 && inputVal.substring(0, 1) === '0') {\n      let emptyDecimals = '0';\n\n      if (precision > 0) {\n        for (let index = 0; index < precision; index++) {\n          emptyDecimals = emptyDecimals + '0';\n        }\n      }\n      inputVal = emptyDecimals;\n    }\n\n    const cleanValue = inputVal.replace(/\\D/g, '');\n\n    let decimals = null;\n    let thousands = null;\n\n    // format number as currency\n    if (precision > 0) {\n      decimals = cleanValue.slice(precision - precision * 2);\n\n      if (decimals.length < precision) {\n        for (let index = 0; index < precision - Number(decimals); index++) {\n          decimals = '0' + decimals;\n        }\n        thousands = '0';\n      } else {\n        thousands = cleanValue.substring(0, cleanValue.length - precision) || '0';\n      }\n\n    } else {\n      thousands = cleanValue;\n    }\n\n    const formattedThousands = thousands.replace(/\\D/g, '').replace(/\\B(?=(\\d{3})+(?!\\d))/g, thousandsSeparator);\n\n    value = `${prefix} ${formattedThousands + (decimals ? decimalSeparator + decimals : '')} ${suffix}`;\n\n    return value;\n  }\n\n  @HostBinding('attr.style')\n  public get valueAsStyle(): any {\n    let variables = '';\n\n    // Layout\n    if (!this.noTableData && this.tableStyle === GTableStyle.TABLE && this.tableHeader.length) {\n      let extraColumns = '';\n\n      if (this.selectable) {\n        extraColumns = `${extraColumns} 30px`;\n      }\n\n      if (this.additionalData) {\n        extraColumns = `${extraColumns} 30px`;\n      }\n\n      if (this.tableRowActions && !this.tableRowActions.hidden) {\n        variables = variables + `--gs-repeat: ${extraColumns} repeat(${this.tableHeader.length}, 1fr) 90px!important;`;\n      } else {\n        variables = variables + `--gs-repeat: ${extraColumns} repeat(${this.tableHeader.length}, 1fr)!important;`;\n      }\n    }\n\n    // UI\n    if (this.customStyles) {\n      if (this.customStyles.color) {\n        variables = variables + `--gs-font-color: ${this.customStyles.color}!important;`;\n      }\n      if (this.customStyles.ui.fontSize) {\n        variables = variables + `--gs-font-size: ${this.customStyles.ui.fontSize}!important;`;\n      }\n      if (this.customStyles.color.primary) {\n        variables = variables + `--gs-primary-color: ${this.customStyles.color.primary}!important;`;\n      }\n      if (this.customStyles.color.secondary) {\n        variables = variables + `--gs-secondary-color: ${this.customStyles.color.secondary}!important;`;\n      }\n      if (this.customStyles.color.neutral) {\n        variables = variables + `--gs-neutral-color: ${this.customStyles.color.neutral}!important;`;\n      }\n      if (this.customStyles.color.border) {\n        variables = variables + `--gs-border-color: ${this.customStyles.color.border}!important;`;\n      }\n      if (this.customStyles.color.white) {\n        variables = variables + `--gs-white-color: ${this.customStyles.color.white}!important;`;\n      }\n      if (this.customStyles.ui.padding) {\n        variables = variables + `--gs-padding: ${this.customStyles.ui.padding}!important;`;\n      }\n      if (this.customStyles.ui.primaryButton) {\n        if (this.customStyles.ui.primaryButton.padding) {\n          variables = variables + `--gs-button-padding: ${this.customStyles.ui.primaryButton.padding}!important;`;\n        }\n        if (this.customStyles.ui.primaryButton.color) {\n          variables = variables + `--gs-button-color: ${this.customStyles.ui.primaryButton.color}!important;`;\n        }\n        if (this.customStyles.ui.primaryButton.background) {\n          variables = variables + `--gs-button-background: ${this.customStyles.ui.primaryButton.background}!important;`;\n        }\n        if (this.customStyles.ui.primaryButton.borderSize) {\n          variables = variables + `--gs-button-border-size: ${this.customStyles.ui.primaryButton.borderSize}!important;`;\n        }\n        if (this.customStyles.ui.primaryButton.borderStyle) {\n          variables = variables + `--gs-button-border-style: ${this.customStyles.ui.primaryButton.borderStyle}!important;`;\n        }\n        if (this.customStyles.ui.primaryButton.borderColor) {\n          variables = variables + `--gs-button-border-color: ${this.customStyles.ui.primaryButton.borderColor}!important;`;\n        }\n        if (this.customStyles.ui.primaryButton.borderRadius) {\n          variables = variables + `--gs-button-border-radius: ${this.customStyles.ui.primaryButton.borderRadius}!important;`;\n        }\n        if (this.customStyles.ui.primaryButton.borderTop) {\n          variables = variables + `--gs-button-border-top: ${this.customStyles.ui.primaryButton.borderTop}!important;`;\n        }\n        if (this.customStyles.ui.primaryButton.borderRight) {\n          variables = variables + `--gs-button-border-right: ${this.customStyles.ui.primaryButton.borderRight}!important;`;\n        }\n        if (this.customStyles.ui.primaryButton.borderBottom) {\n          variables = variables + `--gs-button-border-bottom: ${this.customStyles.ui.primaryButton.borderBottom}!important;`;\n        }\n        if (this.customStyles.ui.primaryButton.borderLeft) {\n          variables = variables + `--gs-button-border-left: ${this.customStyles.ui.primaryButton.borderLeft}!important;`;\n        }\n      }\n    }\n\n    return this.sanitizer.bypassSecurityTrustStyle(\n      variables\n    );\n  }\n\n  @HostListener('window:resize', ['$event'])\n  public onResize(event) {\n    this.setContentWidth();\n  }\n\n  private setContentWidth() {\n    if (!this.noTableData && this.tableStyle === GTableStyle.TABLE) {\n      this.tableContentPadding =\n        this.tableHeaderElement.nativeElement.offsetWidth - this.tableContentElement.nativeElement.offsetWidth;\n    }\n  }\n\n  public hdlRowAction(action: GTableAction): void {\n    this.rowActionClick.emit(action);\n    this.selectedAdditionalData = null;\n  }\n\n  /**\n   * Navigate next or previous based on\n   * @param next if true navigate next, else previous\n   *\n   * @deprecated use `onNavigateTo` instead\n   */\n  public onNavigate(next: boolean): void {\n    if (next) {\n      // tslint:disable-next-line: deprecation\n      this.navigateNext.emit();\n      this.navigateTo.emit(this.currentPage + 1);\n    } else {\n      // tslint:disable-next-line: deprecation\n      this.navigatePrevious.emit();\n      this.navigateTo.emit(this.currentPage - 1);\n    }\n    this.selectedAdditionalData = null;\n  }\n\n  /**\n   * Navigate to specific page\n   * @param page number of page\n   *\n   * returns the next page value\n   */\n  public onNavigateTo(page: number): void {\n    this.navigateTo.emit(page);\n    this.selectedAdditionalData = null;\n  }\n\n  private onInputDataError(): void {\n    return console.error(\n      'GS Table building err: Please provide tableData:' + '\\n\\n' +\n      '1. In your template make sure you have:' + '\\n\\n' +\n      '\\xa0' + '<gs-table [tableData]=\"tableData\"></gs-table>' + '\\n\\n' +\n      '2. In your component declare `tableData`:' + '\\n\\n' +\n      '\\xa0public tableData = {' + '\\n' +\n      '\\xa0\\xa0\\xa0' + 'data: Array<object>;' + '\\n' +\n      '\\xa0\\xa0\\xa0' + 'header?: Array<string>;' + '\\n' +\n      '\\xa0\\xa0\\xa0' + 'options?: {' + '\\n' +\n      '\\xa0\\xa0\\xa0\\xa0\\xa0' + 'style?: GTableStyle;' + '\\n' +\n      '\\xa0\\xa0\\xa0\\xa0\\xa0' + 'rowActions?: GTableRowAction;' + '\\n' +\n      '\\xa0\\xa0\\xa0' + '}' + '\\n' +\n      '\\xa0}'\n    );\n  }\n\n  public toggleAdditionalData(selectedAdditionalData: number, $event?: { target: { id: string, nodeName: string } }): void {\n    if (!this.additionalData || ($event && (\n      $event.target.id === 'rowActionButton' ||\n      $event.target.id === 'gsbtnany'\n    ))) {\n      return;\n    }\n\n    this.selectedAdditionalData = this.selectedAdditionalData === selectedAdditionalData ? null : selectedAdditionalData;\n  }\n\n  /**\n   * Selectable methods\n   */\n  public onRowValueChanged(newRowValue: GSelectableValue): void {\n    this.tableContent[newRowValue.index || 0].selectable = newRowValue.value;\n    this.rowValueChanged.emit(newRowValue);\n    this.tableDataChanged.emit(this.tableContent);\n  }\n\n  public toggleSelectableSelection(newRowValue: GSelectableValue): void {\n    this.selectableAllSelected = newRowValue.value;\n    // tslint:disable-next-line\n    for (let i = 0; i < this.tableContent.length; i++) {\n      this.tableContent[i].selectable = this.selectableAllSelected;\n    }\n    this.tableDataChanged.emit(this.tableContent);\n  }\n\n  /**\n   * Footer actions\n   */\n  public onFooterActionClicked(action: GTableFooterAction): void {\n    this.tableActionClick.emit(action);\n  }\n}\n","import { Component, ViewChild, ElementRef, Input, Output, EventEmitter, HostListener, OnChanges, SimpleChanges } from '@angular/core';\nimport { GTableRowAction, GTableAction } from '../../gs-tables.widgets';\n\n@Component({\n  selector: 'gs-table-row-actions',\n  templateUrl: './row-actions.component.html',\n  styleUrls: ['./row-actions.component.sass']\n})\nexport class GsTableRowActionsComponent implements OnChanges {\n  public openMenu: boolean;\n  public menuHasActions = false;\n\n  @ViewChild('optionsContainer', { static: false }) public optionsContainer: ElementRef;\n  @ViewChild('optionsButton', { static: true }) public optionsButton: ElementRef;\n\n  @Input() public rowAction: GTableRowAction;\n  @Input() public rowData: {};\n  @Output() private rowActionEvent = new EventEmitter<GTableAction>();\n\n  @HostListener('document:click', ['$event'])\n  clickout(event) {\n    if (this.optionsButton && this.optionsButton.nativeElement.contains(event.target)) {\n      this.onToggleActionsMenu();\n    } else if (this.openMenu && !this.optionsContainer.nativeElement.contains(event.target)) {\n      this.openMenu = false;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.rowAction && changes.rowAction.currentValue && changes.rowAction.currentValue.actions) {\n      changes.rowAction.currentValue.actions.forEach((action: GTableAction) => {\n        if (this.displayActionIf(action)) {\n          this.menuHasActions = true;\n        }\n      });\n    } else {\n      this.menuHasActions = false;\n    }\n  }\n\n  public hdlAction(action: GTableAction): void {\n    this.openMenu = false;\n    action.row = this.rowData;\n    this.rowActionEvent.emit(action);\n  }\n\n  public onToggleActionsMenu(): void {\n    this.openMenu = !this.openMenu;\n  }\n\n  public displayActionIf(action: GTableAction): boolean {\n    if (action.hidden) {\n      return false;\n    } else if (action.displayIf) {\n      return this.rowData[action.displayIf.model].toString() === action.displayIf.hasValue.toString() ? true : false;\n    } else {\n      return true;\n    }\n  }\n}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { GAdditionalData } from '../../gs-tables.models';\n\n@Component({\n  selector: 'gs-table-additional-data',\n  templateUrl: './additional-data.component.html',\n  styleUrls: ['./additional-data.component.sass']\n})\nexport class GsAdditionalDataComponent implements OnChanges {\n  @Input() public additionalData: Array<GAdditionalData>;\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.additionalData.currentValue) {\n      this.additionalData = changes.additionalData.currentValue;\n    }\n  }\n}\n","import { Component, Input, OnChanges, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { GSelectableValue } from '../../gs-tables.models';\n\n@Component({\n  selector: 'gs-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.sass']\n})\nexport class GsCheckboxComponent implements OnChanges {\n  @Input() public value: boolean;\n  @Input() public rowIndex: number;\n\n  @Output() private valueChanged = new EventEmitter<GSelectableValue>();\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes) {\n      if (changes.value && changes.value.currentValue) {\n        this.value = changes.value.currentValue;\n      }\n\n      if (changes.rowIndex && changes.rowIndex.currentValue) {\n        this.rowIndex = changes.rowIndex.currentValue;\n      }\n    }\n  }\n\n  public onValueChanged(): void {\n    this.valueChanged.emit({\n      value: this.value,\n      index: this.rowIndex || null\n    });\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { GsTablesComponent } from './gs-tables.component';\nimport { GsTableRowActionsComponent } from './gs-table-elements/row-actions/row-actions.component';\nimport { GsAdditionalDataComponent } from './gs-table-elements/additional-data/additional-data.component';\nimport { GsCheckboxComponent } from './gs-table-elements/checkbox/checkbox.component';\nimport { GStyles } from './gs-tables.widgets';\n\n@NgModule({\n  declarations: [\n    GsTablesComponent,\n    GsTableRowActionsComponent,\n    GsAdditionalDataComponent,\n    GsCheckboxComponent\n  ],\n  imports: [\n    CommonModule,\n    TranslateModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  exports: [GsTablesComponent]\n})\nexport class GsTablesModule {\n  public static forRoot(styles?: GStyles): ModuleWithProviders {\n    return {\n      ngModule: GsTablesModule,\n      providers: [\n        {\n          provide: 'customStyles',\n          useValue: styles\n        }\n      ]\n    };\n  }\n}\n","/*\n * Public API Surface of gs-tables\n */\n\nexport * from './lib/gs-tables.service';\nexport * from './lib/gs-tables.component';\nexport * from './lib/gs-tables.module';\nexport * from './lib/gs-tables.widgets';\nexport * from './lib/gs-tables.enum';\nexport * from './lib/gs-tables.constants';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {GsAdditionalDataComponent as ɵb} from './lib/gs-table-elements/additional-data/additional-data.component';\nexport {GsCheckboxComponent as ɵc} from './lib/gs-table-elements/checkbox/checkbox.component';\nexport {GsTableRowActionsComponent as ɵa} from './lib/gs-table-elements/row-actions/row-actions.component';"],"names":["tslib_1.__decorate","tslib_1.__param"],"mappings":"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"}